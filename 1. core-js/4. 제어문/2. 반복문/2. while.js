// 1 ~ 10까지 등차수열 누적합

//총합을 저장할 변수
var total = 0;

//더할 값들을 저장 할 변수
var n = 1; // 제어 변수: 반복문을 제어할 변수 (begin)

while (n <= 10) {
    total += n; // 조건식: 반복문의 종료시점을 결정 (end)
    n++; //3. 증감식: 반복문의 종료를 위한 식 (step)
}
console.log(`총합: ${total}`);

// 1 ~ 100 사이의 정수중 13의 배수 모두 출력하기.

var num = 1; //제어변수

while (num <= 100) {
        //num을 100으로 나눴을 때 0과 같을 때만 출력 (13의 배수)
    if (num % 13 === 0) {
        console.log(num);
    }
    num++; // 증감식 (1(num) % 13, 2 % 13, 3 % 13 --- 반복하기 위함 while에 작성)
}


//1~100사이의 정수 중 6의 배수이면서 12의 배수가 아닌 수 출력하기

var num2 = 1;

while (num2 <= 100) {
    // && (그리고), !== 반대 (아니면)
    if (num2 % 6 === 0 && num2 % 12 !== 0) {
        console.log(num2) 
    }
    num2++;
}

// 1 ~ 4000 사이의 정수 중 9의 배수의 개수를 출력하기.

var count = 0;
var n1 = 1;
console.log ('=================================')
while (n1 <= 4000) {
    if(n1 % 9 === 0) {
        count++;       
    }
    n1++;
}
console.log(count);


// 1 ~ 4000 사이의 정수 중 5의 배수를 출력하고 10의 배수의 개수

var count1 = 0;
var n2 = 1;

while (n2 <= 4000) /*n2가 4천까지*/ {
    if(n2 % 5 === 0 && n2 % 10 !==0) /*n2가 5로 나눴을 때 0, n2가 10으로 나눴을 때 나머지가 0이면 false.*/ {
        count1++; //위의 조건이 맞으면 count1에 (+1)
    }
    n2++; //while {}에 들어있으니 n2를 4천까지 반복.
}
console.log(count1);